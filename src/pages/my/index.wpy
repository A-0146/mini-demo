

<style lang="less">
/** less **/
.my {
  image {
    width: 750rpx;
    height: 240rpx;
  }
  .user {
    .avatar {
      image {
        width: 168rpx;
        height: 168rpx;
        border-radius: 50%;
        vertical-align: top;
        box-shadow: rgba(65, 63, 63, 0.3) 7rpx 7rpx 7rpx;
      }
    }
    text {
      position: absolute;
      top: 200rpx;
      left: 242rpx;
      font-family: PingFangSC-Medium;
      font-size: 53rpx;
      color: #2d2c2b;
      letter-spacing: 0;
    }
  }
}
</style>


<template lang="wxml">
    <view class="my">
      <movable-area style="height: {{windowHeight}}; width: 750rpx;position: absolute;top:0;left:0;" class="user">
        <!-- direction：all、vertical、horizontal、none -->
        <movable-view class="avatar" style="width:168rpx;height:168rpx;margin-top:80rpx;" x="{{x}}" y="{{y}}" damping="50" friction="0" inertia="true" @change="htouchmove" direction="all">
          <image src="{{userInfo.avatarUrl}}" mode="aspectFit" />
        </movable-view>
        <text @tap.stop="comeBack">{{userInfo.nickName}}</text>
      </movable-area>
      <toast />
      <authorization />
    </view>
</template>



<script>
import wepy from 'wepy';
import home from '@/api/api';
import U from '@/utils/utils';
import { ISLOGIN } from '@/utils/storageKey';
import authorization from '@/components/authorization';
import toast from '@/components/Toast';

export default class My extends wepy.page {
  config = {
    enablePullDownRefresh: false,
    backgroundTextStyle: '#000',
    onReachBottomDistance: 50,
    navigationBarBackgroundColor: '#FFF',
    navigationBarTitleText: '我的',
    navigationBarTextStyle: 'black'
  };

  components = { authorization, toast };

  data = {
    userInfo: wx.getStorageSync('userInfo'),
    windowHeight: wx.getSystemInfoSync().windowHeight * 2 + 'rpx',
    x: 64 + 'rpx',
    y: 80 + 'rpx'
  };

  watch = {
    //监听器适用于当属性改变时需要进行某些额外处理的情形。
    x(newValue, oldValue) {
      this.x = 64 + 'rpx';
      this.y = 80 + 'rpx';
      this.$apply();
    },
    y(newValue, oldValue) {
      this.x = 64 + 'rpx';
      this.y = 80 + 'rpx';
      this.$apply();
    }
  };

  htouchmove(e) {
    if (
      e.detail.source == 'friction' ||
      e.detail.x == '0' ||
      e.detail.x >= '291'
    ) {
      this.x = e.detail.x * 2 + 'rpx';
      this.y = e.detail.y * 2 + 'rpx';
      this.$apply();
    }
  }

  methods = {};

  async login() {
    // 登录授权弹层
    this.$invoke('authorization', 'openLayer');
  }

  onLoad() {
    let _this = this;
    wx.getNetworkType({
      success(res) {
        let networkType = res.networkType;
        if (networkType == 'none') {
          _this.$invoke('toast', 'show', '无网络，请稍后重试');
        } else {
          _this.login();
        }
      }
    });
    wx.onNetworkStatusChange(function(res) {
      res.isConnected && _this.login();
    });
  }

  onShow() {}
}
</script>